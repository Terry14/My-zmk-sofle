#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    basegame: basegame {
        compatible = "zmk,behavior-tap-dance";
        label = "BASEGAME";
        #binding-cells = <0>;
        bindings = <&to_base>, <&to_game>;
    };

    tph: tph {
        compatible = "zmk,behavior-hold-tap";
        label = "TPH";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <140>;
        flavor = "tap-preferred";
    };

    capsdance: capsdance {
        compatible = "zmk,behavior-tap-dance";
        label = "CAPSDANCE";
        #binding-cells = <0>;
        tapping-term-ms = <140>;
        bindings = <&caps_word>, <&kp CAPS>;
    };

    rgb_brightness: rgb_brightness {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_BRIGHTNESS";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    mo_navb: mo_navb {
        compatible = "zmk,behavior-hold-tap";
        label = "MO_NAVB";
        bindings = <&mo_nav>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <140>;
        flavor = "balanced";
    };

    mo_numb: mo_numb {
        compatible = "zmk,behavior-hold-tap";
        label = "MO_NUMB";
        bindings = <&mo_num>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <140>;
        flavor = "balanced";
    };

    mo_funcb: mo_funcb {
        compatible = "zmk,behavior-hold-tap";
        label = "MO_FUNCB";
        bindings = <&mo_func>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <140>;
        flavor = "balanced";
    };

    mo_sysb: mo_sysb {
        compatible = "zmk,behavior-hold-tap";
        label = "MO_SYSB";
        bindings = <&mo_sys>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <140>;
        flavor = "balanced";
    };

    behaviors {
    };

    macros {
        base_col: base_col {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_COLOR_HSB(236,100,50)>;
            label = "BASE_COL";
        };

        game_col: game_col {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_COLOR_HSB(0,100,50)>;
            label = "GAME_COL";
        };

        mo_num: mo_num {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&mo 4 &rgb_ug RGB_COLOR_HSB(177,100,50)>,
                <&macro_pause_for_release>,
                <&base_col>;

            label = "MO_NUM";
        };

        mo_func: mo_func {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&mo 5 &rgb_ug RGB_COLOR_HSB(281,100,50)>,
                <&macro_pause_for_release>,
                <&base_col>;

            label = "MO_FUNC";
        };

        mo_nav: mo_nav {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&mo 6 &rgb_ug RGB_COLOR_HSB(112,100,50)>,
                <&macro_pause_for_release>,
                <&base_col>;

            label = "MO_NAV";
        };

        mo_game2: mo_game2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&mo 3 &rgb_ug RGB_COLOR_HSB(270,100,50)>,
                <&macro_pause_for_release>,
                <&base_col>;

            label = "MO_GAME2";
        };

        to_base: to_base {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &base_col>;
            label = "TO_BASE";
        };

        to_game: to_game {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 2 &game_col>;
            label = "TO_GAME";
        };

        mo_sys: mo_sys {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&mo 1 &rgb_ug RGB_COLOR_HSB(70,100,50)>,
                <&macro_pause_for_release>,
                <&base_col>;

            label = "MO_SYS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESC     &kp N5           &kp N4           &kp N3           &kp N2             &kp N1     &kp UP_ARROW     &kp N6     &kp N7                &kp N8            &kp N9              &kp N0               &kp BACKSPACE
&kp TAB     &kp Q            &kp W            &kp F            &kp P              &kp B      &kp DOWN_ARROW   &kp J      &kp L                 &kp U             &kp Y               &kp APOS             &none
&capsdance  &kp A            &kp R            &kp S            &kp T              &kp G      &kp LEFT_ARROW   &kp M      &kp N                 &kp E             &kp I               &kp O                &none
&kp LSHFT   &tph LEFT_WIN Z  &tph LEFT_ALT X  &tph LCTRL C     &tph LEFT_SHIFT D  &kp V      &kp RIGHT_ARROW  &kp K      &tph RIGHT_SHIFT H    &tph RCTRL COMMA  &tph RIGHT_ALT DOT  &tph RIGHT_WIN FSLH  &none
&basegame   &kp LCTRL        &kp LEFT_ALT     &mo_funcb 0 ESC  &mo_numb 0 SPACE   &kp TAB    &to_game         &kp ENTER  &mo_navb 0 BACKSPACE  &mo_sysb 0 DEL    &none               &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Base";
        };

        BT_RGB {
            bindings = <
&out OUT_TOG     &bt BT_SEL 4     &bt BT_SEL 3     &bt BT_SEL 2     &bt BT_SEL 1     &bt BT_SEL 0    &trans  &trans  &trans     &trans     &trans    &trans    &bootloader
&trans           &trans           &trans           &trans           &trans           &bt BT_CLR      &trans  &trans  &kp TAB    &kp SPACE  &kp ESC   &trans    &sys_reset
&none            &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &trans          &trans  &trans  &kp RET    &kp BSPC   &kp DEL   &trans    &trans
&rgb_ug RGB_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &trans          &trans  &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp RGUI  &trans
&trans           &trans           &trans           &trans           &trans           &trans          &trans  &trans  &trans     &trans     &trans    &trans
            >;

            sensor-bindings = <&rgb_brightness>;
        };

        Game {
            bindings = <
&kp ESC  &kp N5     &kp N4     &kp N3    &kp N2     &kp N1       &trans  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&kp N6   &kp TAB    &kp Q      &kp W     &kp E      &kp R        &trans  &kp T   &kp Y   &kp U   &kp I   &kp O   &kp P
&kp N7   &kp LSHFT  &kp A      &kp S     &kp D      &kp F        &trans  &kp G   &kp H   &kp J   &kp K   &kp L   &trans
&kp N8   &kp LCTRL  &kp Z      &kp X     &kp C      &kp V        &trans  &kp B   &kp N   &kp M   &trans  &trans  &trans
&trans   &kp N9     &kp LCTRL  &kp LALT  &kp SPACE  &mo_game2    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            label = "Game";
        };

        Game_Mirror {
            bindings = <
&kp ESC   &kp N0        &kp N9     &kp N8     &kp N7  &kp N6    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp P     &kp O         &kp I      &kp U      &kp Y   &kp T     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp SEMI  &kp L         &kp K      &kp J      &kp H   &kp G     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp FSLH  &kp DOT       &kp COMMA  &kp M      &kp N   &kp B     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans    &kp LEFT_WIN  &kp LALT   &kp SPACE  &none   &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        Num {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &trans  &kp TILDE      &kp LBKT   &none       &none            &kp RBKT         &kp KP_NLCK
&trans  &trans    &kp DEL   &kp BSPC   &kp ENTER  &trans    &trans  &kp EXCL       &kp KP_N7  &kp KP_N8   &kp KP_N9        &kp KP_MULTIPLY  &kp SCROLLLOCK
&trans  &trans    &kp ESC   &kp SPACE  &kp TAB    &trans    &trans  &kp EQUAL      &kp KP_N4  &kp KP_N5   &kp KP_N6        &kp KP_PLUS      &kp COLON
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &trans  &kp BACKSLASH  &kp KP_N1  &kp KP_N2   &kp KP_N3        &kp SLASH        &kp PERCENT
&trans  &trans    &trans    &trans     &trans     &trans    &trans  &kp MINUS      &kp COMMA  &kp PERIOD  &kp KP_NUMBER_0  &kp KP_COMMA
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Func {
            bindings = <
&bootloader  &trans    &trans    &trans     &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans   &trans
&sys_reset   &trans    &kp DEL   &kp BSPC   &kp ENTER  &trans    &trans  &trans  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans       &trans    &kp ESC   &kp SPACE  &kp TAB    &trans    &trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans
&trans       &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &trans  &trans  &kp F1  &kp F2  &kp F3  &kp F12  &trans
&trans       &trans    &trans    &trans     &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        nav {
            bindings = <
&trans  &trans       &trans     &trans      &trans       &trans        &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp PAGE_UP  &kp HOME   &kp UP      &kp END      &kp INS       &trans  &trans  &kp TAB    &kp SPACE  &kp ESC   &trans    &trans
&trans  &kp PG_DN    &kp LEFT   &kp DOWN    &kp RIGHT    &capsdance    &trans  &trans  &kp RET    &kp BSPC   &kp DEL   &trans    &trans
&trans  &kp K_UNDO   &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_REDO    &trans  &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp RGUI  &trans
&trans  &trans       &trans     &trans      &trans       &trans        &trans  &trans  &trans     &trans     &trans    &trans
            >;

            label = "nav";
            sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
        };
    };
};
