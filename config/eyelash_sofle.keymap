#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    basegame: basegame {
        compatible = "zmk,behavior-tap-dance";
        label = "BASEGAME";
        #binding-cells = <0>;
        bindings = <&to 0>, <&to 4>;
    };

    tph: tph {
        compatible = "zmk,behavior-hold-tap";
        label = "TPH";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <140>;
        flavor = "tap-preferred";
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC    &kp N5           &kp N4           &kp N3        &kp N2             &kp N1     &kp UP_ARROW     &kp N6     &kp N7              &kp N8            &kp N9              &kp N0               &kp BACKSPACE
&kp TAB    &kp Q            &kp W            &kp F         &kp P              &kp B      &kp DOWN_ARROW   &kp J      &kp L               &kp U             &kp Y               &kp APOS             &none
&kp CAPS   &kp A            &kp R            &kp S         &kp S              &kp T      &kp LEFT_ARROW   &kp M      &kp N               &kp E             &kp I               &kp O                &none
&kp LSHFT  &tph LEFT_WIN Z  &tph LEFT_ALT X  &tph LCTRL C  &tph LEFT_SHIFT D  &kp V      &kp RIGHT_ARROW  &kp K      &tph RIGHT_SHIFT H  &tph RCTRL COMMA  &tph RIGHT_ALT DOT  &tph RIGHT_WIN FSLH  &none
&basegame  &kp LCTRL        &kp LEFT_GUI     &kp LEFT_ALT  &kp SPACE          &kp TAB    &kp ENTER        &kp ENTER  &kp BACKSPACE       &kp DEL           &kp RIGHT_SHIFT     &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE  &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans     &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans     &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans     &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&basegame  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Game {
            bindings = <
&kp ESC  &kp N5     &kp N4     &kp N3    &kp N2     &kp N1    &trans  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&kp N6   &kp TAB    &kp Q      &kp W     &kp E      &kp R     &trans  &kp T   &kp Y   &kp U   &kp I   &kp O   &kp P
&kp N7   &kp LSHFT  &kp A      &kp S     &kp D      &kp F     &trans  &kp G   &kp H   &kp J   &kp K   &kp L   &trans
&kp N8   &kp LCTRL  &kp Z      &kp X     &kp C      &kp V     &trans  &kp B   &kp N   &kp M   &trans  &trans  &trans
&trans   &kp N9     &kp LCTRL  &kp LALT  &kp SPACE  &mo 5     &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Game_Mirror {
            bindings = <
&kp ESC   &kp N0        &kp N9     &kp N8    &kp N7     &kp N6    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp P     &kp O         &kp I      &kp U     &kp Y      &kp T     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp SEMI  &kp L         &kp K      &kp J     &kp H      &kp G     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp FSLH  &kp DOT       &kp COMMA  &kp M     &kp N      &kp B     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans    &kp LEFT_WIN  &kp LCTRL  &kp LALT  &kp SPACE  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
